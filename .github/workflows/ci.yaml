name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  REGISTRY: "cr.selcloud.ru/bladforceone"
  IMAGE_NAME: "auth"
  CONTAINER_NAME: "auth-container"

jobs:
  image-build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout master
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Registry
        run: docker login -u ${{ secrets.REGISTRY_USERNAME }} -p ${{ secrets.REGISTRY_PASSWORD }} $REGISTRY

      - name: Build and Push Docker Image
        run: |
          TAG_NAME=$(echo $GITHUB_SHA | head -c7)
          docker buildx create --use
          docker buildx build --no-cache --push --tag $REGISTRY/$IMAGE_NAME:$TAG_NAME -f Dockerfile .

  deploy-image:
    runs-on: ubuntu-latest
    needs: image-build-and-push

    steps:
      - name: Verify network
        run: |
          echo "Проверяем подключение к ${{ secrets.SERVER_HOST }}"
          ping -c 3 ${{ secrets.SERVER_HOST }} || echo "Ping failed"
          nc -zv ${{ secrets.SERVER_HOST }} 22 || echo "Port 22 unavailable"

      - name: Deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT || '22' }}
          envs: GITHUB_SHA  # Ключевое исправление - передаём переменную
          script: |
            # Устанавливаем переменные
            REGISTRY="cr.selcloud.ru/bladforceone"
            IMAGE_NAME="auth"
            CONTAINER_NAME="auth-container"

            # Формируем тег (первые 7 символов SHA)
            TAG_NAME=$(echo "$GITHUB_SHA" | head -c7)
            [ -z "$TAG_NAME" ] && TAG_NAME="latest"  # Fallback
            FULL_IMAGE="$REGISTRY/$IMAGE_NAME:$TAG_NAME"

            # Отладочная информация
            echo "===================================="
            echo "Using image: $FULL_IMAGE"
            echo "Commit SHA: $GITHUB_SHA"
            echo "Short tag: $TAG_NAME"
            echo "===================================="

            # Логин в реестр
            echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login cr.selcloud.ru -u "${{ secrets.REGISTRY_USERNAME }}" --password-stdin

            # Пул образа с проверкой
            if ! docker pull "$FULL_IMAGE"; then
              echo "::error::Failed to pull image $FULL_IMAGE"
              exit 1
            fi

            # Остановка старого контейнера
            if docker ps -a | grep -q "$CONTAINER_NAME"; then
              echo "Stopping existing container..."
              docker stop "$CONTAINER_NAME"
              docker rm "$CONTAINER_NAME"
            fi

            # Запуск нового контейнера
            echo "Starting new container..."
            docker run -d \
              -p 8080:8080 \
              --name "$CONTAINER_NAME" \
              --restart unless-stopped \
              "$FULL_IMAGE"

            # Очистка
            docker system prune -af --filter "until=24h" | grep -v "Total reclaimed space"